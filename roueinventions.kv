#:kivy 1.7.1
#:set rouemargin 5

<Label>:
	font_name: 'data/kycw1_49.ttf'

<Roue>:
	canvas.before:
		Color:
			rgb: 0.81, 0.82, 0.81
		Rectangle:
			size: self.size

		Color:
			rgb: self.circle_color
		Rectangle:
			pos: self.center_x - self.circle_radius / 2 - root.glow_value * dp(25), self.center_y - self.circle_radius / 2 - root.glow_value * dp(25)
			size: self.circle_radius + root.glow_value * dp(50), self.circle_radius + root.glow_value * dp(50)
			source: 'data/sd/back.png'


<RoueItem>:
	size_hint: None, None
	item_size: self.item_radius
	size: self.item_size, self.item_size
	font_size: self.item_radius / 13.
	do_scale: False

	canvas.before:
		StencilPush
		Ellipse:
			size: self.size
			segments: 45
		StencilUse
		Color:
			rgb: 1, 1, 1, .9
		Rectangle:
			size: self.size
			source: 'data/common/circle.png'
	canvas.after:
		StencilPop

	BoxLayout:
		id: topcontent
		pos: (root.width - self.width) / 2., root.height - dp(rouemargin) - self.height
		size: root.item_radius - dp(rouemargin * 2), root.item_radius - dp(rouemargin * 2)
		orientation: 'vertical'
		canvas:
			Color:
				rgba: 0, 1, 0, 0
			Rectangle:
				pos: self.pos
				size: self.size

		Image:
			source: 'data/sd/{}.png'.format(root.item_id) if root.item_id else None
			size_hint_y: .55

		Widget:
			size_hint: .3, None
			height: '2dp'
			pos_hint: {'center_x': .5}

			canvas:
				Color:
					rgb: .28, .75, .92
				Rectangle:
					pos: self.pos
					size: self.size

		Label:
			text: root.item_title.upper().replace('|', '\n')
			color: (.94, .22, .31, 1)
			mipmap: True
			valign: 'middle'
			halign: 'center'
			font_size: root.font_size
			size_hint_y: .40

		Widget:
			size_hint_y: .05

	GridLayout:
		cols: 1
		pos: (root.width - self.width) / 2., topcontent.y - self.height
		size: root.item_radius * root.item_scale_open - dp(20), self.minimum_height
		opacity: root.desc_opacity
		orientation: 'vertical'

		Widget:
			size_hint_y: None
			height: '3dp'

			canvas:
				Color:
					rgba: .94, .22, .31, .5
				Rectangle:
					pos: self.x + self.width / 4, self.top
					size: self.width / 2., dp(1)

		Label:
			text: 'Date de création: {}'.format(root.item_date.encode('utf-8'))
			color: (.94, .22, .31, 1)
			font_size: root.font_size
			size_hint_y: None
			height: self.texture_size[1]

		Label:
			text: root.item_description.replace('|', '\n')
			color: (0, .713, .862, 1)
			font_size: root.font_size
			text_size: self.width, None
			halign: 'center'
			size_hint_y: None
			height: self.texture_size[1]

<Invention>:
	canvas.before:
		StencilPush
		Ellipse:
			pos: self.center_x - self.radius / 2, self.center_y - self.radius / 2
			size: self.radius, self.radius
			segments: 30
		StencilUse
		Color:
			rgba: 0.9476, 0.6235, 0.6784, .85
		Rectangle:
			pos: self.pos
			size: self.size

	canvas.after:
		StencilPop

	Label:
		text: 'Bravo\nVous avez trouvé\nl\'invention:\n[b]{}[/b]'.format(root.invention_title.upper().encode('utf-8'))
		markup: True
		size: root.size
		halign: 'center'
		font_size: min(self.height, self.width) / 25.


<InventionItem>:
	size_hint: None, None
	canvas:
		Color:
			rgb: .01, .01, .01
		Rectangle:
			pos: -dp(4) / root.scale, -dp(4) / root.scale
			size: self.width + dp(8) / root.scale, self.height + dp(8) / root.scale

